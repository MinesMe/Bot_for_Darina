# app/listener.py

import asyncio
import json
from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold
from aiogram.exceptions import TelegramForbiddenError

from app.database.models import listener_engine
# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
from app.database import requests_favorite_notifier as db_notifier
# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
from app.database.keyboards_notifier import get_add_to_subscriptions_keyboard
from app.lexicon import Lexicon

async def listen_for_db_notifications(bot: Bot):
    """–°–ª—É—à–∞–µ—Ç –∫–∞–Ω–∞–ª –≤ –ë–î –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    print("üì° –°–ª—É—à–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è '–ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' –∑–∞–ø—É—â–µ–Ω.")
    try:
        async with listener_engine.connect() as conn:
            raw_connection = await conn.get_raw_connection()
            asyncpg_conn = raw_connection.driver_connection
            
            # –ú—ã –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç bot –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ partial
            handler_with_bot = lambda c, p, ch, pl: asyncio.create_task(notification_handler(bot, c, p, ch, pl))
            
            await asyncpg_conn.add_listener("new_event_channel", handler_with_bot)
            
            print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 'new_event_channel' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")
            while True:
                await asyncio.sleep(3600) # –ü—Ä–æ—Å—Ç–æ –¥–µ—Ä–∂–∏–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∂–∏–≤—ã–º
    except Exception as e:
        print(f"[–û–®–ò–ë–ö–ê] –í —Å–ª—É—à–∞—Ç–µ–ª–µ –ë–î: {e}")


async def notification_handler(bot: Bot, connection, pid, channel, payload):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Å–æ–±—ã—Ç–∏–∏ –∏–∑ –ë–î."""
    print(f"\n--- –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –æ—Ç PID {pid} –ø–æ –∫–∞–Ω–∞–ª—É {channel} ---")
    data = json.loads(payload)
    
    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ payload
    artist_info = data.get('artist', {})
    artist_id = artist_info.get('artist_id')
    artist_name = artist_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç')
    
    event_id = data.get('event_id')
    event_title = data.get('title', '–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ')
    
    venue_info = data.get('venue', {})
    event_city_name = venue_info.get('city_name', '') # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ç—Ä–∏–≥–≥–µ—Ä –≤–µ—Ä–Ω–µ—Ç –∏ —ç—Ç–æ
    event_country_name = data.get('country', {}).get('name', '')
    
    if not artist_id or not event_id:
        print("–û—à–∏–±–∫–∞ –≤ payload: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç artist_id –∏–ª–∏ event_id.")
        return

    # 2. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª —ç—Ç–æ–≥–æ –∞—Ä—Ç–∏—Å—Ç–∞ –≤ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
    subscribers = await db_notifier.get_favorite_subscribers_by_artist(artist_id)
    print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ '{artist_name}' (ID: {artist_id}): {len(subscribers)} —á–µ–ª.")

    # 3. –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–¥–ø–∏—Å—á–∏–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    for fav_entry in subscribers:
        user = fav_entry.user
        user_regions = fav_entry.regions # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã
        is_priority_region = False
        if user_regions and (event_country_name in user_regions or event_city_name in user_regions):
            is_priority_region = True
            
        # 5. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        lexicon = Lexicon(user.language_code)
        emoji = "üî•" if is_priority_region else "üîî"
        
        text = (
            f"{emoji} –£ –≤–∞—à–µ–≥–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏—Å—Ç–∞ {hbold(artist_name)} –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ!\n\n"
            f"üéµ {hbold(event_title)}\n"
            f"üìç {event_city_name}, {event_country_name}"
        )
        
        # 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        try:
            await bot.send_message(
                chat_id=user.user_id,
                text=text,
                reply_markup=get_add_to_subscriptions_keyboard(event_id),
                parse_mode=ParseMode.HTML
            )
            print(f"--> –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}")
        except TelegramForbiddenError:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {e}")
        
        await asyncio.sleep(0.1) # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏