import asyncio
from functools import partial
import json

from aiogram import Bot
from app.database.models import listener_engine
import app.database.requests as rq

async def listen_for_db_notifications(bot:Bot):
    print("üì° –§—É–Ω–∫—Ü–∏—è listen_for_db_notifications() –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞.")
    try:
        async with listener_engine.connect() as conn:  # —ç—Ç–æ AsyncConnection
            # –ü–æ–ª—É—á–∞–µ–º "—Å—ã—Ä–æ–µ" —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑ SQLAlchemy
            raw_connection = await conn.get_raw_connection()

            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–µ–µ asyncpg —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            asyncpg_conn = raw_connection.driver_connection

            # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
            partial_notification_handler = partial(notification_handler, bot)
            await asyncpg_conn.add_listener("new_event_channel", partial_notification_handler)

            

            print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª 'new_event_channel' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –°–ª—É—à–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")

            while True:
                await asyncio.sleep(1)  # –ù—É–∂–Ω–æ, —á—Ç–æ–±—ã –∑–∞–¥–∞—á–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª–∞—Å—å
    except Exception as e:
        print(f"[–û–®–ò–ë–ö–ê] –í —Å–ª—É—à–∞—Ç–µ–ª–µ –ë–î: {e}")


async def notification_handler(bot: Bot, connection, pid, channel, payload):
    print("\n--- –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –≤ –ë–î! ---")
    event_data = json.loads(payload)
    event_title = event_data.get('title') 
    event_description = event_data.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
    # –¢–∞–∫ –∫–∞–∫ event_type - —ç—Ç–æ –≤–ª–æ–∂–µ–Ω–Ω—ã–π JSON, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ
    event_type_name = event_data.get('event_type', {}).get('name', '–ù–µ —É–∫–∞–∑–∞–Ω') 

    users_id = await rq.get_subscribers_for_event_title(event_title)
    for user_id in users_id:
        await bot.send_message(chat_id=user_id, text=f"""–ü–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:
-–ù–∞–∑–≤–∞–Ω–∏–µ: {event_title}
-–≤—Ä–µ–º—è: {event_description}
-—Ç–∏–ø: {event_type_name}""")

    
    return payload
   
    # print(f"–ö–∞–Ω–∞–ª: {channel}")
    # print(f"PID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {pid}")
    # print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {payload}")
    # print("---------------------------")
