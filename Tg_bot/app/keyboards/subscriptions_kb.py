from datetime import datetime
import locale
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from dateutil.relativedelta import relativedelta
from app.lexicon import EVENT_TYPE_EMOJI

def get_general_onboarding_keyboard() -> InlineKeyboardMarkup:
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–±—â–µ–π –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üëç –î–∞, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å", callback_data="setup_general_mobility")
    builder.button(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_general_mobility")
    builder.adjust(1)
    return builder.as_markup()

def get_add_sub_action_keyboard(show_setup_mobility_button: bool = False) -> InlineKeyboardMarkup:
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±–æ—Ä: –Ω–∞–ø–∏—Å–∞—Ç—å –∏–º—è –∞—Ä—Ç–∏—Å—Ç–∞ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.
    –ú–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –≤–∫–ª—é—á–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—â–µ–π –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∞—Ä—Ç–∏—Å—Ç–∞", callback_data="write_artist")
    builder.button(text="üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="import_artists")
    builder.adjust(1)
    if show_setup_mobility_button:
        builder.row(InlineKeyboardButton(text="üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—â—É—é –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å", callback_data="setup_general_mobility"))
    return builder.as_markup()

def get_mobility_type_choice_keyboard() -> InlineKeyboardMarkup:
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üåç –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—â–∏–µ", callback_data="use_general_mobility")
    builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è —ç—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="setup_custom_mobility")
    builder.adjust(1)
    return builder.as_markup()


def get_add_more_or_finish_keyboard(show_setup_mobility_button: bool = False) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ü–∏–∫–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∞—Ä—Ç–∏—Å—Ç–∞", callback_data="write_artist")
    builder.button(text="üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ", callback_data="import_artists")
    if show_setup_mobility_button:
         builder.row(InlineKeyboardButton(text="üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—â—É—é –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å", callback_data="setup_general_mobility"))
    builder.row(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="finish_adding_subscriptions"))
    return builder.as_markup()

def found_artists_keyboard(artists) -> InlineKeyboardMarkup:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏.
    –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç ID –∞—Ä—Ç–∏—Å—Ç–∞ –≤ callback_data.
    """
    builder = InlineKeyboardBuilder()
    for artist in artists:
        # –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –æ–±—Ä–µ–∑–∞–µ–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        button_text = artist.name[:40] + '...' if len(artist.name) > 40 else artist.name
        
        # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í callback_data –ø–µ—Ä–µ–¥–∞–µ–º ID, –∞ –Ω–µ –∏–º—è
        builder.button(text=button_text, callback_data=f"subscribe_to_artist:{artist.artist_id}")
        
    builder.adjust(1)
    builder.row(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_artist_search"))
    return builder.as_markup()